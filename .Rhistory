layout=layout_with_fr(
NFDI_graph,
coords = NULL,
dim = 3,
niter = 500,
start.temp = sqrt(vcount(NFDI_graph)),
grid = c("auto", "grid", "nogrid"),
# weights = T,
minx = NULL,
maxx = NULL,
miny = NULL,
maxy = NULL,
minz = NULL,
maxz = NULL,
# coolexp,
maxdelta,
area,
repulserad,
# maxiter
),
# layout = layout.graphopt,main="graphopt",
# layout=layout.fruchterman.reingold, main="fruchterman.reingold",
# layout=layout.circle, main="circle",
# layout=layout.sphere, main="sphere",
vertex.size = .5*degree(NFDI_graph),
vertex.label.cex = 0.75,
vertex.label.family = "Helvetica",
vertex.label.color= "grey20",
vertex.frame.color = "#7b91ab",
edge.width = 1,
edge.color = "#7b91ab",
edge.curved = 0.1
)
# --------------------------------------------------------------------------------------
# Jetzt wird die Grafik / das Netzwerk erzeugt
# Verbessertes Layout
plot(NFDI_graph,
layout = layout.graphopt,main="graphopt",
# layout=layout.fruchterman.reingold, main="fruchterman.reingold",
# layout=layout.circle, main="circle",
# layout=layout.sphere, main="sphere",
vertex.size = .5*degree(NFDI_graph),
vertex.label.cex = 0.75,
vertex.label.family = "Helvetica",
vertex.label.color= "grey20",
vertex.frame.color = "#7b91ab",
edge.width = 1,
edge.color = "#7b91ab",
edge.curved = 0.1
)
# --------------------------------------------------------------------------------------
# Jetzt wird die Grafik / das Netzwerk erzeugt
# Verbessertes Layout
plot(NFDI_graph,
layout = layout.graphopt,main="graphopt",
# layout=layout.fruchterman.reingold, main="fruchterman.reingold",
# layout=layout.circle, main="circle",
# layout=layout.sphere, main="sphere",
vertex.size = .5*degree(NFDI_graph),
vertex.label.cex = 0.25,
vertex.label.family = "Helvetica",
vertex.label.color= "grey20",
vertex.frame.color = "#7b91ab",
edge.width = 1,
edge.color = "#7b91ab",
edge.curved = 0.1
)
# --------------------------------------------------------------------------------------
# Jetzt wird die Grafik / das Netzwerk erzeugt
# Verbessertes Layout
plot(NFDI_graph,
layout = layout.graphopt,main="graphopt",
# layout=layout.fruchterman.reingold, main="fruchterman.reingold",
# layout=layout.circle, main="circle",
# layout=layout.sphere, main="sphere",
vertex.size = .5*degree(NFDI_graph),
vertex.label.cex = 0.5,
vertex.label.family = "Helvetica",
vertex.label.color= "grey20",
vertex.frame.color = "#7b91ab",
edge.width = 1,
edge.color = "#7b91ab",
edge.curved = 0.1
)
# --------------------------------------------------------------------------------------
# Jetzt wird die Grafik / das Netzwerk erzeugt
# Verbessertes Layout
plot(NFDI_graph,
layout = layout.graphopt,main="graphopt",
# layout=layout.fruchterman.reingold, main="fruchterman.reingold",
# layout=layout.circle, main="circle",
# layout=layout.sphere, main="sphere",
vertex.size = .5*degree(NFDI_graph),
vertex.label.cex = 0.5,
vertex.label.family = "Roboto",
vertex.label.color= "grey20",
vertex.frame.color = "#7b91ab",
edge.width = 1,
edge.color = "#7b91ab",
edge.curved = 0.1
)
# --------------------------------------------------------------------------------------
# Jetzt wird die Grafik / das Netzwerk erzeugt
# Verbessertes Layout
plot(NFDI_graph,
layout = layout.graphopt,main="graphopt",
# layout=layout.fruchterman.reingold, main="fruchterman.reingold",
# layout=layout.circle, main="circle",
# layout=layout.sphere, main="sphere",
vertex.size = .5*degree(NFDI_graph),
vertex.label.cex = 0.5,
vertex.label.family = "Arial",
vertex.label.color= "grey20",
vertex.frame.color = "#7b91ab",
edge.width = 1,
edge.color = "#7b91ab",
edge.curved = 0.1
)
# --------------------------------------------------------------------------------------
# Jetzt wird die Grafik / das Netzwerk erzeugt
# Verbessertes Layout
plot(NFDI_graph,
layout = layout.graphopt,main="graphopt",
# layout=layout.fruchterman.reingold, main="fruchterman.reingold",
# layout=layout.circle, main="circle",
# layout=layout.sphere, main="sphere",
vertex.size = .5*degree(NFDI_graph),
vertex.label.cex = 0.5,
vertex.label.family = "Times",
vertex.label.color= "grey20",
vertex.frame.color = "#7b91ab",
edge.width = 1,
edge.color = "#7b91ab",
edge.curved = 0.1
)
# --------------------------------------------------------------------------------------
# Jetzt wird die Grafik / das Netzwerk erzeugt
# Verbessertes Layout
plot(NFDI_graph,
layout = layout.graphopt,main="graphopt",
# layout=layout.fruchterman.reingold, main="fruchterman.reingold",
# layout=layout.circle, main="circle",
# layout=layout.sphere, main="sphere",
vertex.size = .5*degree(NFDI_graph),
vertex.label.cex = 0.5,
vertex.label.family = "Comic Sans",
vertex.label.color= "grey20",
vertex.frame.color = "#7b91ab",
edge.width = 1,
edge.color = "#7b91ab",
edge.curved = 0.1
)
# --------------------------------------------------------------------------------------
# Jetzt wird die Grafik / das Netzwerk erzeugt
# Verbessertes Layout
set.seed(123)
plot(NFDI_graph,
layout = layout.graphopt,main="graphopt",
# layout=layout.fruchterman.reingold, main="fruchterman.reingold",
# layout=layout.circle, main="circle",
# layout=layout.sphere, main="sphere",
vertex.size = .5*degree(NFDI_graph),
vertex.label.cex = 0.5,
vertex.label.family = "Comic Sans",
vertex.label.color= "grey20",
vertex.frame.color = "#7b91ab",
edge.width = 1,
edge.color = "#7b91ab",
edge.curved = 0.1
)
plot(NFDI_graph,
layout = layout.graphopt,main="graphopt",
# layout=layout.fruchterman.reingold, main="fruchterman.reingold",
# layout=layout.circle, main="circle",
# layout=layout.sphere, main="sphere",
vertex.size = .5*degree(NFDI_graph),
vertex.label.cex = 0.5,
vertex.label.family = "Comic Sans",
vertex.label.color= "grey20",
vertex.frame.color = "#7b91ab",
edge.width = 1,
edge.color = "#7b91ab",
edge.curved = 0.1
)
plot(NFDI_graph,
layout = layout.graphopt,main="graphopt",
# layout=layout.fruchterman.reingold, main="fruchterman.reingold",
# layout=layout.circle, main="circle",
# layout=layout.sphere, main="sphere",
vertex.size = .5*degree(NFDI_graph),
vertex.label.cex = 0.5,
vertex.label.family = "Comic Sans",
vertex.label.color= "grey20",
vertex.frame.color = "#7b91ab",
edge.width = 1,
edge.color = "#7b91ab",
edge.curved = 0.1
)
plot(NFDI_graph,
layout = layout.graphopt,main="graphopt",
# layout=layout.fruchterman.reingold, main="fruchterman.reingold",
# layout=layout.circle, main="circle",
# layout=layout.sphere, main="sphere",
vertex.size = .5*degree(NFDI_graph),
vertex.label.cex = 0.5,
vertex.label.family = "Roboto",
vertex.label.color= "grey20",
vertex.frame.color = "#7b91ab",
edge.width = 1,
edge.color = "#7b91ab",
edge.curved = 0.1
)
source('~/Documents/github/NFDI_Netzwerk/nfdi_network_workshop.R', echo=TRUE)
source('~/Documents/github/NFDI_Netzwerk/nfdi_network_workshop.R', echo=TRUE)
source('~/Documents/github/NFDI_Netzwerk/nfdi_network_workshop.R', echo=TRUE)
source('~/Documents/github/NFDI_Netzwerk/nfdi_network_workshop.R', echo=TRUE)
source('~/Documents/github/NFDI_Netzwerk/nfdi_network_workshop.R', echo=TRUE)
debugSource('~/Documents/github/NFDI_Netzwerk/nfdi_network_workshop.R', echo=TRUE)
debugSource('~/Documents/github/NFDI_Netzwerk/nfdi_network_workshop.R', echo=TRUE)
debugSource('~/Documents/github/NFDI_Netzwerk/nfdi_network_workshop.R', echo=TRUE)
debugSource('~/Documents/github/NFDI_Netzwerk/nfdi_network_workshop.R', echo=TRUE)
if (!require("igraph")) install.packages("igraph")
library('igraph')
set.seed(123)
# Daten importieren
NFDI_Netzwerk <- read.table(header=TRUE,sep=",",
text="from,to
DAPHNE4NFDI,FAIRmat
DAPHNE4NFDI,NFDI4Chem
DAPHNE4NFDI,NFDI4Ing
DAPHNE4NFDI,NFDI-MatWerk
DAPHNE4NFDI,NFDI4Cat
DAPHNE4NFDI,PUNCH4NFDI
DAPHNE4NFDI,NFDI4Health
DAPHNE4NFDI,NFDI4Objects
FAIRmat,DAPHNE4NFDI
FAIRmat,MaRDI
FAIRmat,NFDI4Chem
FAIRmat,NFDI4Cat
FAIRmat,NFDI4Ing
FAIRmat,NFDI-MatWerk
FAIRmat,PUNCH4NFDI
FAIRmat,DataPLANT
FAIRmat,NFDI4DataScience
FAIRmat,NFDIxCS
MaRDI,NFDI-MatWerk
MaRDI,PUNCH4NFDI
MaRDI,FAIRmat
MaRDI,NFDI4Ing
MaRDI,NFDI4Chem
MaRDI,NFDI-Neuro
MaRDI,NFDI4Cat
NFDI4Agri,NFDI4Microbiota
NFDI4Agri,NFDI4Health
NFDI4Agri,NFDI4BioDiversity
NFDI4Agri,DataPLANT
NFDI4Agri,NFDI4Earth
NFDI4Agri,KonsortSWD
NFDI4Agri,NFDI4Immuno
NFDI4DataScience,NFDIxCS
NFDI4DataScience,MaRDI
NFDI4DataScience,NFDI4Culture
NFDI4DataScience,KonsortSWD
NFDI4DataScience,NFDI4Health
NFDI4DataScience,NFDI4BioDiversity
NFDI4DataScience,NFDI4Cat
NFDI4DataScience,NFDI4Chem
NFDI4DataScience,NFDI4Ing
NFDI4DataScience,NFDI4Microbiota
NFDI4DataScience,NFDI-MatWerk
NFDI4Earth,DataPLANT
NFDI4Earth,GHGA
NFDI4Earth,KonsortSWD
NFDI4Earth,NFDI4Agri
NFDI4Earth,NFDI4BioDiversity
NFDI4Earth,NFDI4Cat
NFDI4Earth,NFDI4Chem
NFDI4Earth,NFDI4Culture
NFDI4Earth,NFDI4Health
NFDI4Earth,NFDI4Ing
NFDI4Earth,NFDI4Objects
NFDI4Immuno,NFDI4Microbiota
NFDI4Immuno,NFDI4Agri
NFDI4Immuno,GHGA
NFDI4Immuno,NFDI4Health
NFDI4Memory,NFDI4Culture
NFDI4Memory,NFDI4Objects
NFDI4Memory,Text+
NFDI4Memory,MaRDI
NFDI4Memory,KonsortSWD
NFDI4Microbiota,DataPLANT
NFDI4Microbiota,GHGA
NFDI4Microbiota,NFDI4Agri
NFDI4Microbiota,NFDI4BioDiversity
NFDI4Microbiota,NFDI4Chem
NFDI4Microbiota,NFDI4DataScience
NFDI4Microbiota,NFDI4Health
NFDI4Microbiota,NFDI4Immuno
NFDI4Microbiota,NFDI4Ing
NFDI4Objects,Text+
NFDI4Objects,NFDI4Memory
NFDI4Objects,NFDI4Culture
NFDI4Objects,KonsortSWD
NFDI4Objects,NFDI4BioDiversity
NFDI4Objects,NFDI4Earth
NFDI4Objects,NFDI4Agri
NFDI4SD,NFDI4Memory
NFDI4SD,NFDI4Objects
NFDI4SD,NFDI4Culture
NFDI4SD,NFDI4DataScience
NFDI-MatWerk,NFDI4Ing
NFDI-MatWerk,NFDIxCS
NFDI-MatWerk,NFDI4DataScience
NFDI-MatWerk,FAIRmat
NFDI-MatWerk,NFDI4Chem
NFDI-MatWerk,DAPHNE4NFDI
NFDI-MatWerk,DataPLANT
NFDI-MatWerk,MaRDI
NFDI-Neuro,NFDI4Health
NFDI-Neuro,NFDI4Ing
NFDI-Neuro,DataPLANT
NFDI-Neuro,NFDI4Culture
NFDI-Neuro,GHGA
NFDI-Neuro,NFDI4Microbiota
NFDI-Neuro,NFDI4BioDiversity
NFDI-Neuro,NFDI4Earth
NFDIxCS,NFDI4Ing
NFDIxCS,MaRDI
NFDIxCS,NFDI4DataScience
NFDIxCS,FAIRmat
NFDIxCS,NFDI4Chem
NFDIxCS,NFDI4Earth
PUNCH4NFDI,FAIRmat
PUNCH4NFDI,DAPHNE4NFDI
PUNCH4NFDI,NFDI4Earth
PUNCH4NFDI,MaRDI
PUNCH4NFDI,NFDIxCS
PUNCH4NFDI,GHGA
PUNCH4NFDI,NFDI4Ing
Text+,NFDI4Culture
Text+,NFDI4Memory
Text+,NFDI4Objects
Text+,KonsortSWD
Text+,NFDI4Ing
Text+,NFDI4Earth
Text+,NFDI4BioDiversity
BERD@NFDI,KonsortSWD
BERD@NFDI,NFDI4Memory
BERD@NFDI,MaRDI
BERD@NFDI,Text+
MaRDI,BERD@NFDI
NFDI4Memory,BERD@NFDI")
# Daten werden konvertiert
NFDI_graph <- graph.data.frame(NFDI_Netzwerk,directed=F)
# Jetzt wird Grafik/Netzwerk erzeigt
plot(NFDI_graph)
# --------------------------------------------------------------------------------------
# Jetzt wird die Grafik / das Netzwerk erzeugt
# Verbessertes Layout
set.seed(123)
plot(NFDI_graph,
layout = layout.graphopt,main="graphopt",
# layout=layout.fruchterman.reingold, main="fruchterman.reingold",
# layout=layout.circle, main="circle",
# layout=layout.sphere, main="sphere",
vertex.size = .5*degree(NFDI_graph),
vertex.label.cex = 0.5,
vertex.label.family = "Roboto",
vertex.label.color= "grey20",
vertex.frame.color = "#7b91ab",
edge.width = 1,
edge.color = "#7b91ab",
edge.curved = 0.1
)
# Daten werden konvertiert
NFDI_graph <- graph.data.frame(NFDI_Netzwerk,directed=F)
NFDI_graph <- simplify(nfdi_net,remove.multiple = F, remove.loops = T)
# Jetzt wird Grafik/Netzwerk erzeigt
plot(NFDI_graph)
# Daten importieren
NFDI_Netzwerk <- read.table(header=TRUE,sep=",",
text="from,to
DAPHNE4NFDI,FAIRmat
DAPHNE4NFDI,NFDI4Chem
DAPHNE4NFDI,NFDI4Ing
DAPHNE4NFDI,NFDI-MatWerk
DAPHNE4NFDI,NFDI4Cat
DAPHNE4NFDI,PUNCH4NFDI
DAPHNE4NFDI,NFDI4Health
DAPHNE4NFDI,NFDI4Objects
FAIRmat,DAPHNE4NFDI
FAIRmat,MaRDI
FAIRmat,NFDI4Chem
FAIRmat,NFDI4Cat
FAIRmat,NFDI4Ing
FAIRmat,NFDI-MatWerk
FAIRmat,PUNCH4NFDI
FAIRmat,DataPLANT
FAIRmat,NFDI4DataScience
FAIRmat,NFDIxCS
MaRDI,BERD@NFDI
MaRDI,NFDI-MatWerk
MaRDI,PUNCH4NFDI
MaRDI,FAIRmat
MaRDI,NFDI4Ing
MaRDI,NFDI4Chem
MaRDI,NFDI-Neuro
MaRDI,NFDI4Cat
NFDI4Agri,NFDI4Microbiota
NFDI4Agri,NFDI4Health
NFDI4Agri,NFDI4BioDiversity
NFDI4Agri,DataPLANT
NFDI4Agri,NFDI4Earth
NFDI4Agri,KonsortSWD
NFDI4Agri,NFDI4Immuno
NFDI4DataScience,NFDIxCS
NFDI4DataScience,MaRDI
NFDI4DataScience,NFDI4Culture
NFDI4DataScience,KonsortSWD
NFDI4DataScience,NFDI4Health
NFDI4DataScience,NFDI4BioDiversity
NFDI4DataScience,NFDI4Cat
NFDI4DataScience,NFDI4Chem
NFDI4DataScience,NFDI4Ing
NFDI4DataScience,NFDI4Microbiota
NFDI4DataScience,NFDI-MatWerk
NFDI4Earth,DataPLANT
NFDI4Earth,GHGA
NFDI4Earth,KonsortSWD
NFDI4Earth,NFDI4Agri
NFDI4Earth,NFDI4BioDiversity
NFDI4Earth,NFDI4Cat
NFDI4Earth,NFDI4Chem
NFDI4Earth,NFDI4Culture
NFDI4Earth,NFDI4Health
NFDI4Earth,NFDI4Ing
NFDI4Earth,NFDI4Objects
NFDI4Immuno,NFDI4Microbiota
NFDI4Immuno,NFDI4Agri
NFDI4Immuno,GHGA
NFDI4Immuno,NFDI4Health
NFDI4Memory,BERD@NFDI
NFDI4Memory,NFDI4Culture
NFDI4Memory,NFDI4Objects
NFDI4Memory,Text+
NFDI4Memory,MaRDI
NFDI4Memory,KonsortSWD
NFDI4Microbiota,DataPLANT
NFDI4Microbiota,GHGA
NFDI4Microbiota,NFDI4Agri
NFDI4Microbiota,NFDI4BioDiversity
NFDI4Microbiota,NFDI4Chem
NFDI4Microbiota,NFDI4DataScience
NFDI4Microbiota,NFDI4Health
NFDI4Microbiota,NFDI4Immuno
NFDI4Microbiota,NFDI4Ing
NFDI4Objects,Text+
NFDI4Objects,NFDI4Memory
NFDI4Objects,NFDI4Culture
NFDI4Objects,KonsortSWD
NFDI4Objects,NFDI4BioDiversity
NFDI4Objects,NFDI4Earth
NFDI4Objects,NFDI4Agri
NFDI4SD,NFDI4Memory
NFDI4SD,NFDI4Objects
NFDI4SD,NFDI4Culture
NFDI4SD,NFDI4DataScience
NFDI-MatWerk,NFDI4Ing
NFDI-MatWerk,NFDIxCS
NFDI-MatWerk,NFDI4DataScience
NFDI-MatWerk,FAIRmat
NFDI-MatWerk,NFDI4Chem
NFDI-MatWerk,DAPHNE4NFDI
NFDI-MatWerk,DataPLANT
NFDI-MatWerk,MaRDI
NFDI-Neuro,NFDI4Health
NFDI-Neuro,NFDI4Ing
NFDI-Neuro,DataPLANT
NFDI-Neuro,NFDI4Culture
NFDI-Neuro,GHGA
NFDI-Neuro,NFDI4Microbiota
NFDI-Neuro,NFDI4BioDiversity
NFDI-Neuro,NFDI4Earth
NFDIxCS,NFDI4Ing
NFDIxCS,MaRDI
NFDIxCS,NFDI4DataScience
NFDIxCS,FAIRmat
NFDIxCS,NFDI4Chem
NFDIxCS,NFDI4Earth
PUNCH4NFDI,FAIRmat
PUNCH4NFDI,DAPHNE4NFDI
PUNCH4NFDI,NFDI4Earth
PUNCH4NFDI,MaRDI
PUNCH4NFDI,NFDIxCS
PUNCH4NFDI,GHGA
PUNCH4NFDI,NFDI4Ing
Text+,NFDI4Culture
Text+,NFDI4Memory
Text+,NFDI4Objects
Text+,KonsortSWD
Text+,NFDI4Ing
Text+,NFDI4Earth
Text+,NFDI4BioDiversity
BERD@NFDI,KonsortSWD
BERD@NFDI,NFDI4Memory
BERD@NFDI,MaRDI
BERD@NFDI,Text+")
# Daten werden konvertiert
NFDI_graph <- graph.data.frame(NFDI_Netzwerk,directed=F)
# Jetzt wird Grafik/Netzwerk erzeigt
plot(NFDI_graph)
source('~/Documents/github/NFDI_Netzwerk/nfdi_network_workshop.R', echo=TRUE)
